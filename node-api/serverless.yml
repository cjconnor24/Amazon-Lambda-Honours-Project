# NODE TODO LIST API
# CHRIS CONNOR
# HONOURS PROJECT

# SERVICE NAME
service: node-todo-api

# CUSTOM VARIABLES
custom:
  todoTableName: 'node-todo-${self:provider.stage}'

# PROVIDER SETUP
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'node-dev'}
  region: ${opt:region, 'eu-west-2'}
  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.todoTableName}"

# ENVIRONMENT VARIABLE
  environment:
    TODO_TABLE_NAME: ${self:custom.todoTableName}  

# FUNCTION DEFINITIONS
functions:
# MEMORY TEST DEFINITIONS
  createTodo512:
    handler: create.create
    memorySize: 512
    events:
    - http:
        path: /todos512
        method: post
        cors:
          origin: '*'

  createTodo1024:
    handler: create.create
    memorySize: 1024
    events:
    - http:
        path: /todos1024
        method: post
        cors:
          origin: '*'

  createTodo2048:
    handler: create.create
    memorySize: 2048
    events:
    - http:
        path: /todos2048
        method: post
        cors:
          origin: '*'
# REGULAR API END POINT DEFINITIONS
  createTodo:
    handler: create.create
    events:
    - http:
        path: /todos
        method: post
        cors:
          origin: '*'

  getTodo:
    handler: get.get
    events:
    - http:
        path: /todos/{id}
        method: get
        cors:
          origin: '*'

  listTodos:
    handler: list.list
    events:
    - http:
        path: /todos
        method: get
        cors:
          origin: '*'

  updateTodo:
    handler: update.update
    events:
    - http:
        path: /todos/{id}
        method: put
        cors:
          origin: '*'

  deleteTodo:
    handler: delete.delete
    events:
    - http:
        path: /todos/{id}
        method: delete
        cors:
          origin: '*'

  deleteTodo512:
    handler: delete.delete
    memorySize: 512
    events:
    - http:
        path: /todos512/{id}
        method: delete
        cors:
          origin: '*'

  deleteTodo1024:
    handler: delete.delete
    memorySize: 1024
    events:
    - http:
        path: /todos1024/{id}
        method: delete
        cors:
          origin: '*'

  deleteTodo2048:
    handler: delete.delete
    memorySize: 2048
    events:
    - http:
        path: /todos2048/{id}
        method: delete
        cors:
          origin: '*'


# RESOURCES FOR DYNAMO DB TABLES - NAME AND SETUP ETC
resources:
  Resources:
    TodosDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.todoTableName}
        AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        KeySchema:
        - AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1